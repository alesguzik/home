#!/usr/bin/env ruby
ws, hs = %x(xrandr|grep connected|grep -v disconnected).split("\n").map do |x|
  w, h = x.match(/(\d+)mm x (\d+)mm/).to_a[1..-1].map(&:to_i)
  [w, h]
end.reduce(&:zip).map{|x| Array(x).flatten}
p ws
p hs
ow, oh = [ws, hs].map{ |x| x.inject(:+) / x.size }

if ARGV.first == '-d'
  ow *= ws.size
  ARGV.shift
end

scale = (ARGV.shift || 1).to_f
w, h = [ow, oh].map { |x| (x / scale).to_i }

puts "original: #{ow}x#{oh}, new: #{w}x#{h}"
system "xrandr --fbmm #{w}x#{h}"

#!/usr/bin/env ruby
require 'ripper'

def lisp_print_symbol(x,first=false)
  if first
    raise "#{x} is case-sensitive" unless x.downcase == x
    puts "|#{x.to_s.upcase.gsub('|','\|')}|"
  else
    puts ":|#{x.to_s.gsub('|','\|')}|"
  end
end

def lisp_print_first(x)
  case x
  when Symbol
    print x.to_s
  when Array
    lisp_print_array x
  else
    raise "#{x.inspect} is not a symbol"
  end
end

def lisp_print_array(x)
  print '('
  first = true
  x.each do |e|
    lisp_print e, first
    first = false
    print ' '
  end
  print ')'
end

def lisp_print(x,first=false)
  if x.class == Array
    lisp_print_array x
  elsif x.class == Symbol
    lisp_print_symbol x, first
  else
    puts x.inspect
  end
end

lisp_print Ripper.sexp(ARGF,ARGV[0])
puts
